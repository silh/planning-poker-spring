plugins {
  id 'org.springframework.boot' version '2.7.7'
  id 'io.spring.dependency-management' version '1.1.0'
  id 'java'
}

group = 'com.silh'
version = '0.0.2-SNAPSHOT'
sourceCompatibility = '17'

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
  developmentOnly
  runtimeClasspath {
    extendsFrom developmentOnly
  }
}

repositories {
  mavenCentral()
}

ext {
  assertjVersion = '3.24.1'
  findBugsVersion = '3.0.2'
  hashidsVersion = '1.0.3'
}

dependencies {
  developmentOnly 'org.springframework.boot:spring-boot-devtools'

  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-websocket'
  implementation 'org.springframework.session:spring-session-core'
  implementation "org.hashids:hashids:$hashidsVersion"
  implementation "com.google.code.findbugs:jsr305:$findBugsVersion"

  compileOnly 'org.projectlombok:lombok'
  annotationProcessor 'org.projectlombok:lombok'

  testImplementation('org.springframework.boot:spring-boot-starter-test') {
    exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
  }
  testImplementation "org.assertj:assertj-core:$assertjVersion"
}

test {
  useJUnitPlatform()
}

task dockerBuild(type: Exec) {
  doLast {
    commandLine "docker", "build", "-t", "planning-poker:latest", "."
  }
}

task dockerRun(type: Exec) {
  doLast {
    commandLine "docker", "run", "-e", "LOGGING_LEVEL_ROOT=debug", "-p", "8080:8080", "--name", "poker", "-d", "--rm", "planning-poker"
  }
}

task dockerStop(type: Exec) {
  doLast {
    commandLine "docker", "stop", "poker"
  }
}

// For pattern matching
tasks.withType(JavaCompile) {
  options.compilerArgs += "--enable-preview"
}

tasks.withType(Test) {
  jvmArgs += "--enable-preview"
}

tasks.withType(JavaExec) {
  jvmArgs += '--enable-preview'
}
